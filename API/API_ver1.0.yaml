<<<<<<< HEAD
swagger: '2.0'
info:
  description: This is a scheduler API for CS3733 group project
  version: 1.0.0
  title: CS3733-Electra Scheduler API
  # put the contact info for your development or API team
  contact:
    email: you@your-company.com

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

# tags are used for organizing operations
tags:
- name: participant
  description: Operations avaliable to participants
- name: organizer
  description: Operations avaliable to organizers
- name: administrator
  description: Operations avaliable to administrators only

paths:
  /schedule: 
    post:
      tags:
      - organizer
      summary: create a schedule in the scheduler
      operationId: addSchedule
      produces:
      - application/json
      - application/xml
      parameters:
      - name: name
        in: query
        description: the name of the schedule
        required: true
        type: string
      - name: author
        in: query
        description: the author of the schedule
        required: true
        type: string
      - name: startTime
        in: query
        description: the start time of each day in schedule
        required: true
        type: string
        format: date
      - name: endTime
        in: query
        description: the end time of each day in schedule
        required: true
        type: string
        format: date
      - name: timePeriod
        in: query
        description: the available duration of each day in schedule (in minutes)
        required: true
        type: integer
      responses:
        200:
          description: Sucessfully created
          schema:
            $ref: '#/definitions/CreatedResponse'
        405:
          description: Invalid input
  /schedule/{id}:
    delete:
      tags:
       - organizer
      summary: delete a schedule in the scheduler
      operationId: deleteSchedule
      produces:
      - application/json
      - application/xml
      parameters:
      - name: id
        in: path
        description: ID of schedule to return
        required: true
        type: string
      responses:
        200:
          description: Succesfully deleted schedule
        400:
          description: Invalid ID provided
        404:
          description: Schedule not found
  /schedule/{id}/showWeekSchedule:
    get:
      tags:
      - participant
      - organizer
      summary: show the schedule for given weeks
      operationId: showWeekSchedule
      produces: 
      - application/json
      - application/xml
      parameters:
      - name: id
        in: path
        description: the id of the schedule
        required: true
        type: string
      - name: week
        in: query
        description: the week number to be displayed
        required: false
        default: 1
        type: integer
      responses:
        201:
          description: Sucessful operation
          schema:
            $ref: '#/definitions/Schedule'
        400:
          description: Invalid ID supplied
        404:
          description: Week not found
  /schedule/{id}/updateDate:
    put:
      tags:
      - organizer
      summary: update the starting and ending date of schedule
      operationId: updateDate
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of schedule to be updated
        required: true
        type: string
      - name: startingDate
        in: query
        description: starting date of the schedule to be updated
        required: true
        type: string
        format: date
      - name: endingDate
        in: query
        description: ending date of the schedule to be updated
        required: true
        type: string
        format: date
      responses:
        200:
          description: Successfully updated the starting and ending date
        400:
          description: invalid id or day provided
  /schedule/reportActivity:
    get:
      tags:
      - administrator
      summary: show schedules for the recent N hours
      operationId: reportActivity
      produces:
      - application/json
      - application/xml
      parameters:
      - name: hours
        in: query
        description: the hours that the shcedule is created prior to current time (e.g. 3)
        required: true
        type: integer
      responses:
        200:
          description: Successfully retrieved recently created schedules
          schema:
            type: array
            items:
              $ref: '#/definitions/BriefScheduleItem'
        400:
          description: Invalid hour input
        404:
          description: Page Not found
  /schedule/findSchedule:
    get:
      tags:
      - participant
      summary: show schedule for corresponding release code
      operationId: findSchedule
      produces:
      - application/json
      - application/xml
      parameters:
      - name: releaseCode
        in: query
        description: the release code of the schedule want to open
        required: true
        type: string
      responses:
        200:
          description: Successfully operation
        400:
          description: Invalid code input
  /schedule/retrieveSchedule:
    get:
      tags:
      - organizer
      summary: show schedule for corresponding secret code
      operationId: retrieveSchedule
      produces:
      - application/json
      - application/xml
      parameters:
      - name: secretCode
        in: query
        description: the secret code of the schedule want to retrieveSchedule
        required: true
        type: string
      responses:
        200:
          description: Successfully operation
        400:
          description: Invalid code input
  /timeslot:
    post:
      tags:
      - organizer
      summary: open a single timeslot in a given day
      operationId: addTimeslot
      produces: 
      - application/json
      - application/xml
      parameters:
      - in: query
        name: beginTime
        description: the beginning time of the timeslot
        required: true
        type: string
        format: time
      - in: query
        name: dayId
        description: the ID of the day slot
        required: true
        type: string
      responses:
        200:
          description: Successfully opened the time slot
        405:
          description: Invalid input
  /timeslot/editDay:
    post:
      tags:
      - organizer
      summary: open all timeslots in a given day
      operationId: addTimeslotByDay
      produces: 
      - application/json
      - application/xml
      parameters:
      - name: dayId
        in: query
        description: specific id of the day that want to created timeslot
        required: true
        type: string
      responses:
        200:
          description: Successfully created
        405:
          description: Invalid Day Selected
    delete:
      tags:
      - organizer
      summary: delete all timeslots in a given day
      operationId: deleteTimeslotByDay
      produces: 
      - application/json
      - application/xml
      parameters:
      - name: dayId
        in: query
        description: specific id of the day that want to delete timeslot
        required: true
        type: string
      responses:
        200:
          description: Succesfully deleted
        400:
          description: Invalid ID provided or slot occupied 
        405:
          description: Invalid Day Selected
  /timeslot/editTime:
    post:
      tags:
      - organizer
      summary: open all timeslots in a given time period
      operationId: addTimeslotBytime
      produces: 
      - application/json
      - application/xml
      parameters:
      - name: scheduleId
        in: query
        description: the ID of the schedule that is going to be created timesolts on
        required: true
        type: string
      - name: timePeriod
        in: query
        description: specific time period that want to created timeslot
        required: true
        type: string
      responses:
        200:
          description: Successfully created
        405:
          description: Invalid timePeriod Selected
    delete:
      tags:
      - organizer
      summary: delete all timeslots in a given time period
      operationId: deleteTimeslotBytime
      produces: 
      - application/json
      - application/xml
      parameters:
      - name: scheduleId
        in: query
        description: the ID of the schedule that is going to be delete timesolts on
        required: true
        type: string
      - name: timePeiriod
        in: query
        description: specific time period that want to delete timeslot
        required: true
        type: string
      responses:
        200:
          description: Successfully deleted
        400:
          description: Invalid ID provided or slot occupied 
        405:
          description: Invalid timePeiriod Selected
  /timeslot/{id}:
    delete:
      tags:
      - organizer
      summary: delete a single timeslot
      operationId: deleteTimeslot
      produces:
      - application/json
      - application/xml
      parameters:
      - name: id
        in: path
        description: the ID of the timeslot to be deleted
        required: true
        type: string
      responses:
        200:
          description: Successfully deleted
        400:
          description: Invalid ID provided or slot occupied 
        404:
          description: Timeslot not found
  /timeslot/searchOpenTimeslot:
    get:
      tags:
      - participant
      summary: search the open timeslot by given condition
      operationId: searchOpenTimeslot
      produces:
      - application/json
      - application/xml
      parameters:
      - name: scheduleId
        in: query
        description: the ID of the schedule to be searched on
        required: true
        type: string
      - name: month
        in: query
        description: Month selected
        required: false
        type: string
      - name: year
        in: query
        description: Year selected
        required: false
        type: number
      - name: dayOfMonth
        in: query
        description: Day of month selected
        required: false
        type: number
      - name: dayOfWeek
        in: query
        description: Day of Week selected
        required: false
        type: string
      - name: startTime
        in: query
        description: startTime of the timeslot
        required: false
        type: string
      - name: endTime
        in: query
        description: endTime of the timeslot (11:00)
        required: false
        type: string
      responses:
        200:
          description: Successfully retrieved avaliable timeslots
          schema:
            type: array
            items:
              $ref: '#/definitions/AvailableSlotsItem'
        400:
          description: Invalid input
        404:
          description: timeslot not found
  /meeting:
    post:
      tags:
      - participant
      summary: add a meeting to the timeslolt
      operationId: regMeeting
      produces:
      - application/json
      - application/xml
      parameters:
      - name: timeslotId
        in: query
        description: the ID of the timeslot
        required: true
        type: string
      - name: partInfo
        in: query
        description: user infomation of the meeting
        required: true
        type: string
      responses:
        200:
          description: successfully created
          schema:
            $ref: '#/definitions/Meeting/properties/secretCode'
        405:
          description: Invalid input
  /meeting/{id}:
    delete:
      tags:
      - participant
      - organizer
      summary: cancel a meeting in the timeslot
      operationId: canMeeting
      produces:
      - application/json
      - application/xml
      parameters:
      - name: id
        in: path
        description: user id for the meeting to be canceled
        required: true
        type: string
      - name: secrectCode
        in: query
        description: secrectCode for the meeting
        required: true
        type: string
      responses:
        200:
          description: Successfully deleted
        400:
          description: Invalid ID supplied
        404:
          description: Meeting not found
  /deleteOld:
    delete:
      tags:
      - administrator
      summary: delete old schedule in the scheduler by admin input date (2017-01-21)
      operationId: deleteOldSchedule
      produces:
      - application/json
      - application/xml
      parameters:
      - name: oldDate
        in: query
        description: the schedule create date that admin require to delete before
        required: true
        type: string
      responses:
        400:
          description: Invalid date input
        404:
          description: Page Not found
  /adminAuthen:
    get:
      tags:
      - administrator
      summary: check the secrect code of the administrator
      operationId: adminAuthen
      produces:
      - application/json
      - application/xml
      parameters:
      - name: secrectCode
        in: query
        description: the secrectCode of the administrator
        type: string
        required: true
      responses:
        200:
          description: Sucessfully authenticated
        400:
          description: Invalid Code input
        404:
          description: permission denied
definitions:
  Meeting:
    type: object
    required:
    - partInfo
    - timeslotId
    properties:
      id:
        type: string
      secretCode:
        type: string
      partInfo:
        type: string
        description: Participant's Information
      timeslotId:
        $ref: '#/definitions/Timeslot/properties/id'
    xml:
      name: meeting
  Timeslot:
    type: object
    required:
    - beginTime
    - dayId
    properties:
      id:
        type: string
      beginTime:
        type: integer
        format: time
        example: 21:01:32Z
      meeting: 
        $ref: '#/definitions/Meeting'
      dayId:
        $ref: '#/definitions/Day/properties/id'
    xml:
      name:  Timeslot
  Day:
    type: object
    required:
    - date
    - scheduleId
    properties:
      id:
        type: string
      date:
        type: string
        format: date
        example: 2018-05-28
      timeslots:
        type: array
        items: 
          $ref: '#/definitions/Timeslot'
      scheduleId:
        $ref: '#/definitions/Schedule/properties/id'
    xml:
      name: Day
  Schedule:
    type: object
    required:
    - name
    - author
    - startTime
    - endTime
    - timePeriod
    properties:
      id:
        type: string
      name:
        type: string
      author:
        type: string
      secretCode:
        type: string
      releaseCode:
        type: string
      days: 
        type: array
        items:
          $ref: '#/definitions/Day'
      createdDate:
        type: string
        format: date-time
        example: 2017-07-21T17:32:28Z
      timePeriod:
        type: integer
        format: minutes
        example: 30
      startTime:
        type: string
        format: time
        example: 17:32:28Z
      endTime:
        type: string
        format: time
        example: 17:32:28Z
    xml:
      name: Schedule
  AvailableSlotsItem:
    type: object
    required:
    - timeslots
    - date
    properties:
      timeslot: 
        $ref: '#/definitions/Timeslot'
      date:
        type: string
        format: date
        example: 2018-05-28
  BriefScheduleItem:
    type: object
    required:
    - name
    - createdDate
    - startDate
    - endDate
    - totalMeetings
    - futureMeetings
    properties:
      name:
        type: string
      createdDate:
        type: string
        format: date
        example: 2018-05-28
      startDate:
        type: string
        format: date
        example: 2018-05-28
      endDate:
        type: string
        format: date
        example: 2018-05-28
      totalMeetings:
        type: integer
      futureMeetings:
        type: integer
  CreatedResponse:
    type: object
    required:
    - secretCode
    - releaseCode
    properties:
      secretCode:
        $ref: '#/definitions/Schedule/properties/secretCode'
      releaseCode:
        $ref: '#/definitions/Schedule/properties/releaseCode'
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /CS3733-Electra/Scheduler-API/1.0.0
schemes:
=======
swagger: '2.0'
info:
  description: This is a scheduler API for CS3733 group project
  version: 1.0.0
  title: CS3733-Electra Scheduler API
  # put the contact info for your development or API team
  contact:
    email: you@your-company.com

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

# tags are used for organizing operations
tags:
- name: participant
  description: Operations avaliable to participants
- name: organizer
  description: Operations avaliable to organizers
- name: administrator
  description: Operations avaliable to administrators only

paths:
  /schedule: 
    post:
      tags:
      - organizer
      summary: create a schedule in the scheduler
      operationId: addSchedule
      produces:
      - application/json
      - application/xml
      parameters:
      - name: name
        in: query
        description: the name of the schedule
        required: true
        type: string
      - name: author
        in: query
        description: the author of the schedule
        required: true
        type: string
      - name: startTime
        in: query
        description: the start time of each day in schedule
        required: true
        type: string
        format: date
      - name: endTime
        in: query
        description: the end time of each day in schedule
        required: true
        type: string
        format: date
      - name: timePeriod
        in: query
        description: the available duration of each day in schedule (in minutes)
        required: true
        type: integer
      responses:
        200:
          description: Sucessfully created
          schema:
            $ref: '#/definitions/CreatedResponse'
        405:
          description: Invalid input
  /schedule/{id}:
    delete:
      tags:
       - organizer
      summary: delete a schedule in the scheduler
      operationId: deleteSchedule
      produces:
      - application/json
      - application/xml
      parameters:
      - name: id
        in: path
        description: ID of schedule to return
        required: true
        type: string
      responses:
        200:
          description: Succesfully deleted schedule
        400:
          description: Invalid ID provided
        404:
          description: Schedule not found
  /schedule/{id}/showWeekSchedule:
    get:
      tags:
      - participant
      - organizer
      summary: show the schedule for given weeks
      operationId: showWeekSchedule
      produces: 
      - application/json
      - application/xml
      parameters:
      - name: id
        in: path
        description: the id of the schedule
        required: true
        type: string
      - name: week
        in: query
        description: the week number to be displayed
        required: false
        default: 1
        type: integer
      responses:
        201:
          description: Sucessful operation
          schema:
            $ref: '#/definitions/Schedule'
        400:
          description: Invalid ID supplied
        404:
          description: Week not found
  /schedule/{id}/updateDate:
    put:
      tags:
      - organizer
      summary: update the starting and ending date of schedule
      operationId: updateDate
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of schedule to be updated
        required: true
        type: string
      - name: startingDate
        in: query
        description: starting date of the schedule to be updated
        required: true
        type: string
        format: date
      - name: endingDate
        in: query
        description: ending date of the schedule to be updated
        required: true
        type: string
        format: date
      responses:
        200:
          description: Successfully updated the starting and ending date
        400:
          description: invalid id or day provided
  /schedule/reportActivity:
    get:
      tags:
      - administrator
      summary: show schedules for the recent N hours
      operationId: reportActivity
      produces:
      - application/json
      - application/xml
      parameters:
      - name: hours
        in: query
        description: the hours that the shcedule is created prior to current time (e.g. 3)
        required: true
        type: integer
      responses:
        200:
          description: Successfully retrieved recently created schedules
          schema:
            type: array
            items:
              $ref: '#/definitions/BriefScheduleItem'
        400:
          description: Invalid hour input
        404:
          description: Page Not found
  /schedule/findSchedule:
    get:
      tags:
      - participant
      summary: show schedule for corresponding release code
      operationId: findSchedule
      produces:
      - application/json
      - application/xml
      parameters:
      - name: releaseCode
        in: query
        description: the release code of the schedule want to open
        required: true
        type: string
      responses:
        200:
          description: Successfully operation
        400:
          description: Invalid code input
  /schedule/retrieveSchedule:
    get:
      tags:
      - organizer
      summary: show schedule for corresponding secret code
      operationId: retrieveSchedule
      produces:
      - application/json
      - application/xml
      parameters:
      - name: secretCode
        in: query
        description: the secret code of the schedule want to retrieveSchedule
        required: true
        type: string
      responses:
        200:
          description: Successfully operation
        400:
          description: Invalid code input
  /timeslot:
    post:
      tags:
      - organizer
      summary: open a single timeslot in a given day
      operationId: addTimeslot
      produces: 
      - application/json
      - application/xml
      parameters:
      - in: query
        name: beginTime
        description: the beginning time of the timeslot
        required: true
        type: string
        format: time
      - in: query
        name: dayId
        description: the ID of the day slot
        required: true
        type: string
      responses:
        200:
          description: Successfully opened the time slot
        405:
          description: Invalid input
  /timeslot/editDay:
    post:
      tags:
      - organizer
      summary: open all timeslots in a given day
      operationId: addTimeslotByDay
      produces: 
      - application/json
      - application/xml
      parameters:
      - name: dayId
        in: query
        description: specific id of the day that want to created timeslot
        required: true
        type: string
      responses:
        200:
          description: Successfully created
        405:
          description: Invalid Day Selected
    delete:
      tags:
      - organizer
      summary: delete all timeslots in a given day
      operationId: deleteTimeslotByDay
      produces: 
      - application/json
      - application/xml
      parameters:
      - name: dayId
        in: query
        description: specific id of the day that want to delete timeslot
        required: true
        type: string
      responses:
        200:
          description: Succesfully deleted
        400:
          description: Invalid ID provided or slot occupied 
        405:
          description: Invalid Day Selected
  /timeslot/editTime:
    post:
      tags:
      - organizer
      summary: open all timeslots in a given time period
      operationId: addTimeslotBytime
      produces: 
      - application/json
      - application/xml
      parameters:
      - name: scheduleId
        in: query
        description: the ID of the schedule that is going to be created timesolts on
        required: true
        type: string
      - name: timePeriod
        in: query
        description: specific time period that want to created timeslot
        required: true
        type: string
      responses:
        200:
          description: Successfully created
        405:
          description: Invalid timePeriod Selected
    delete:
      tags:
      - organizer
      summary: delete all timeslots in a given time period
      operationId: deleteTimeslotBytime
      produces: 
      - application/json
      - application/xml
      parameters:
      - name: scheduleId
        in: query
        description: the ID of the schedule that is going to be delete timesolts on
        required: true
        type: string
      - name: timePeiriod
        in: query
        description: specific time period that want to delete timeslot
        required: true
        type: string
      responses:
        200:
          description: Successfully deleted
        400:
          description: Invalid ID provided or slot occupied 
        405:
          description: Invalid timePeiriod Selected
  /timeslot/{id}:
    delete:
      tags:
      - organizer
      summary: delete a single timeslot
      operationId: deleteTimeslot
      produces:
      - application/json
      - application/xml
      parameters:
      - name: id
        in: path
        description: the ID of the timeslot to be deleted
        required: true
        type: string
      responses:
        200:
          description: Successfully deleted
        400:
          description: Invalid ID provided or slot occupied 
        404:
          description: Timeslot not found
  /timeslot/searchOpenTimeslot:
    get:
      tags:
      - participant
      summary: search the open timeslot by given condition
      operationId: searchOpenTimeslot
      produces:
      - application/json
      - application/xml
      parameters:
      - name: scheduleId
        in: query
        description: the ID of the schedule to be searched on
        required: true
        type: string
      - name: month
        in: query
        description: Month selected
        required: false
        type: string
      - name: year
        in: query
        description: Year selected
        required: false
        type: number
      - name: dayOfMonth
        in: query
        description: Day of month selected
        required: false
        type: number
      - name: dayOfWeek
        in: query
        description: Day of Week selected
        required: false
        type: string
      - name: startTime
        in: query
        description: startTime of the timeslot
        required: false
        type: string
      - name: endTime
        in: query
        description: endTime of the timeslot (11:00)
        required: false
        type: string
      responses:
        200:
          description: Successfully retrieved avaliable timeslots
          schema:
            type: array
            items:
              $ref: '#/definitions/AvailableSlotsItem'
        400:
          description: Invalid input
        404:
          description: timeslot not found
  /meeting:
    post:
      tags:
      - participant
      summary: add a meeting to the timeslolt
      operationId: regMeeting
      produces:
      - application/json
      - application/xml
      parameters:
      - name: timeslotId
        in: query
        description: the ID of the timeslot
        required: true
        type: string
      - name: partInfo
        in: query
        description: user infomation of the meeting
        required: true
        type: string
      responses:
        200:
          description: successfully created
          schema:
            $ref: '#/definitions/Meeting/properties/secretCode'
        405:
          description: Invalid input
  /meeting/{id}:
    delete:
      tags:
      - participant
      - organizer
      summary: cancel a meeting in the timeslot
      operationId: canMeeting
      produces:
      - application/json
      - application/xml
      parameters:
      - name: id
        in: path
        description: user id for the meeting to be canceled
        required: true
        type: string
      - name: secrectCode
        in: query
        description: secrectCode for the meeting
        required: true
        type: string
      responses:
        200:
          description: Successfully deleted
        400:
          description: Invalid ID supplied
        404:
          description: Meeting not found
  /deleteOld:
    delete:
      tags:
      - administrator
      summary: delete old schedule in the scheduler by admin input date (2017-01-21)
      operationId: deleteOldSchedule
      produces:
      - application/json
      - application/xml
      parameters:
      - name: oldDate
        in: query
        description: the schedule create date that admin require to delete before
        required: true
        type: string
      responses:
        400:
          description: Invalid date input
        404:
          description: Page Not found
  /adminAuthen:
    get:
      tags:
      - administrator
      summary: check the secrect code of the administrator
      operationId: adminAuthen
      produces:
      - application/json
      - application/xml
      parameters:
      - name: secrectCode
        in: query
        description: the secrectCode of the administrator
        type: string
        required: true
      responses:
        200:
          description: Sucessfully authenticated
        400:
          description: Invalid Code input
        404:
          description: permission denied
definitions:
  Meeting:
    type: object
    required:
    - partInfo
    - timeslotId
    properties:
      id:
        type: string
      secretCode:
        type: string
      partInfo:
        type: string
        description: Participant's Information
      timeslotId:
        $ref: '#/definitions/Timeslot/properties/id'
    xml:
      name: meeting
  Timeslot:
    type: object
    required:
    - beginTime
    - dayId
    properties:
      id:
        type: string
      beginTime:
        type: integer
        format: time
        example: 21:01:32Z
      meeting: 
        $ref: '#/definitions/Meeting'
      dayId:
        $ref: '#/definitions/Day/properties/id'
    xml:
      name:  Timeslot
  Day:
    type: object
    required:
    - date
    - scheduleId
    properties:
      id:
        type: string
      date:
        type: string
        format: date
        example: 2018-05-28
      timeslots:
        type: array
        items: 
          $ref: '#/definitions/Timeslot'
      scheduleId:
        $ref: '#/definitions/Schedule/properties/id'
    xml:
      name: Day
  Schedule:
    type: object
    required:
    - name
    - author
    - startTime
    - endTime
    - timePeriod
    properties:
      id:
        type: string
      name:
        type: string
      author:
        type: string
      secretCode:
        type: string
      releaseCode:
        type: string
      days: 
        type: array
        items:
          $ref: '#/definitions/Day'
      createdDate:
        type: string
        format: date-time
        example: 2017-07-21T17:32:28Z
      timePeriod:
        type: integer
        format: minutes
        example: 30
      startTime:
        type: string
        format: time
        example: 17:32:28Z
      endTime:
        type: string
        format: time
        example: 17:32:28Z
    xml:
      name: Schedule
  AvailableSlotsItem:
    type: object
    required:
    - timeslots
    - date
    properties:
      timeslot: 
        $ref: '#/definitions/Timeslot'
      date:
        type: string
        format: date
        example: 2018-05-28
  BriefScheduleItem:
    type: object
    required:
    - name
    - createdDate
    - startDate
    - endDate
    - totalMeetings
    - futureMeetings
    properties:
      name:
        type: string
      createdDate:
        type: string
        format: date
        example: 2018-05-28
      startDate:
        type: string
        format: date
        example: 2018-05-28
      endDate:
        type: string
        format: date
        example: 2018-05-28
      totalMeetings:
        type: integer
      futureMeetings:
        type: integer
  CreatedResponse:
    type: object
    required:
    - secretCode
    - releaseCode
    properties:
      secretCode:
        $ref: '#/definitions/Schedule/properties/secretCode'
      releaseCode:
        $ref: '#/definitions/Schedule/properties/releaseCode'
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /CS3733-Electra/Scheduler-API/1.0.0
schemes:
>>>>>>> 5f53eb63f7bd5cad6bb79731317061e42f4117f3
 - https